module.exports = {
    randomBytes(size) {
      const buffer = new Uint8Array(size)
      for (let i = 0; i < size; i++)
        buffer[i] = Math.floor(Math.random() * 256)
  
      return {
        buffer,
        toString(encoding) {
          if (encoding === 'hex')
            return Array.from(buffer).map(b => b.toString(16).padStart(2, '0')).join('')
          if (encoding === 'base64')
            return btoa(String.fromCharCode(...buffer))
          throw new Error(`Encoding "${encoding}" not supported`)
        }
      }
    },
  
    getRandomValues(typedArray) {
      for (let i = 0; i < typedArray.length; i++)
        typedArray[i] = Math.floor(Math.random() * 256)
      return typedArray
    }
  }
  